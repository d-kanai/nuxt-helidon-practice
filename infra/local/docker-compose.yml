version: '3'
services:
  ui:
    container_name: ui-container
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - bff

  bff:
    container_name: bff-container
    build:
      context: ../../bff/
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - core-api

  redis:
    container_name: redis-container
    image: redis:latest
    command: redis-server --appendonly yes --requirepass testpassword
    ports:
      - "6379:6379"
    environment:
      TZ: JST-9

  redisCommander:
    container_name: redis-commander-container
    image: rediscommander/redis-commander:latest
    environment:
      REDIS_HOSTS: Redis:redis-container:6379:0:testpassword # Register local Redis server with Redis-Commander in advance.
      TZ: JST-9
    ports:
      - "7379:8081"
    depends_on:
      - redis

  core-api:
    container_name: core-api-container
    build:
      context: ../../core-api/
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - core-db

  core-db:
    container_name: core-db-container
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: testdb
    ports:
      - "5432:5432"
    volumes:
      - ./postgresql/init-core-db:/docker-entrypoint-initdb.d  # Table schema to be included in advance

  # core-db:
  #   container_name: core-db-container
  #   image: container-registry.oracle.com/database/enterprise:19.19.0.0 # arm64 image
  #   # image: container-registry.oracle.com/database/enterprise:21.3.0.0 # amd64 image
  #   shm_size: 4g
  #   environment:
  #     - TZ=Asia/Tokyo
  #     # - NLS_LANG=Japanese_Japan.UTF-8
  #     - ORACLE_SID=ORCLCDB
  #     - ORACLE_PDB=ORCLPDB1
  #     - ORACLE_PWD=Passw0rd
  #     - DB_MEMORY=2g
  #   ports:
  #     - "1521:1521"
  #   volumes:
  #     - ./oracle/setup:/opt/oracle/scripts/setup
  #     - ./oracle/startup:/opt/oracle/scripts/startup

  external-api:
    container_name: external-api-container
    image: "holomekc/wiremock-gui:latest"
    ports:
      - "3001:3001"
    command:
      "--port 3001 --max-request-journal 1000 --local-response-templating --verbose"
    volumes:
      - ./wiremock:/home/wiremock # Mock information to be included in advance


  portainer:
    container_name: portainer-container
    image: portainer/portainer-ce
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock